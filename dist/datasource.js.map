{"version":3,"sources":["../src/datasource.js"],"names":["_","PNPDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","basicAuth","DEFAULT_HOST","DEFAULT_SERVICE","DEFAULT_PERFLABEL","options","query","buildQueryParameters","targets","filter","t","hide","host","service","perflabel","length","when","data","start","Number","range","from","toDate","getTime","toFixed","end","to","x","target","_name2pnp","_fixup_regex","label","This","requestOptions","_requestOptions","method","headers","queryLabel","requestOptionsLabel","datasourceRequest","then","metrics","rmv","result","labels","perfRegEx","RegExp","k","res","match","xx","res_lbl","clean_res","i","hasOwnProperty","push","dataQueryMapper","alias","scopedVars","tag_host","value","tag_service","tag_perflabel","tag_label","replace","datapoints","y","pop","fill","undefined","factor","eval","NaN","matches","values","split","join","delimiter","response","status","message","title","query_string","shift","toLowerCase","Error","op","val","metricFindData","prependVariables","mapper","mapToTextValueHost","mapToTextValueService","mapToTextValuePerflabel","variables","unshift","text","map","hosts","d","services","servicedesc","refId","Authorization"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class PNPDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.basicAuth = instanceSettings.basicAuth;\n\n    this.DEFAULT_HOST = \"select host\";\n    this.DEFAULT_SERVICE = \"select service\";\n    this.DEFAULT_PERFLABEL = \"select performance label\";\n  }\n\n  /* fetch pnp rrd data */\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n    query.targets = query.targets.filter(t => t.host);      /* hide querys without a host filter */\n    query.targets = query.targets.filter(t => t.service);   /* hide querys without a service filter */\n    query.targets = query.targets.filter(t => t.perflabel); /* hide querys without a perflabel filter */\n\n    if(query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    query.start = Number(options.range.from.toDate().getTime() / 1000).toFixed();\n    query.end   = Number(options.range.to.toDate().getTime() / 1000).toFixed();\n\n    /* fixup regex syntax in query targets */\n    for(var x=0; x<query.targets.length; x++) {\n      var target = query.targets[x];\n      if(target.host      == this.DEFAULT_HOST)      { target.host      = '' }\n      if(target.service   == this.DEFAULT_SERVICE)   { target.service   = '' }\n      if(target.perflabel == this.DEFAULT_PERFLABEL) { target.perflabel = '' }\n\t  \n      target.host      = this._name2pnp(this._fixup_regex(target.host));\n      target.service   = this._name2pnp(this._fixup_regex(target.service));\n      target.label     = this._fixup_regex(target.perflabel);\n      target.perflabel = '/.*/';\n    }\n\n    var This = this;\n    var requestOptions = this._requestOptions({\n      url: this.url + '/index.php/api/metrics',\n      data: query,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n\t\n\tvar queryLabel = query.targets[0];\n\tvar requestOptionsLabel = this._requestOptions({\n      url: this.url + '/index.php/api/labels',\n      data: queryLabel,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n\t\n\treturn this.backendSrv.datasourceRequest(requestOptions).then(function(metrics) {\n\t\tvar rmv =  [];\n\t\tvar result = {data: {targets:[]}};\n\t\tif(metrics && metrics.data && metrics.data.targets) {\n\t\t\treturn This.backendSrv.datasourceRequest(requestOptionsLabel).then(function(labels) {\n\t\t\t\tfor(var x=0; x < metrics.data.targets.length; x++) {\n\t\t\t\t\tvar perfRegEx = new RegExp(This._name2pnp(options.targets[x].label, false));\n\t\t\t\t\tfor(var k=0; k < metrics.data.targets[x].length; k++) {\n\t\t\t\t\t\tvar res    = metrics.data.targets[x][k];\n\t\t\t\t\t\tif (res.perflabel.match(perfRegEx)) {\n\t\t\t\t\t\t\tif (!result.data.targets[x]) result.data.targets[x] = [];\n\t\t\t\t\t\t\tresult.data.targets[x][k] = metrics.data.targets[x][k];\n\t\t\t\t\t\t\tif(labels && labels.data && labels.data.labels) {\n\t\t\t\t\t\t\t\tfor(var xx=0; xx < labels.data.labels.length; xx++) {\n\t\t\t\t\t\t\t\t\tvar res_lbl = labels.data.labels[xx];\n\t\t\t\t\t\t\t\t\t// We don't care if the service or host is equal. If the label names are equal, they are written the same anyway.\n\t\t\t\t\t\t\t\t\tif (res_lbl.name == res.perflabel) {\n\t\t\t\t\t\t\t\t\t\tresult.data.targets[x][k].perflabel = res_lbl.label;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Repair Indexes of Array\n\t\t\t\tvar clean_res = {data: {targets:[]}};\n\t\t\t\tvar i = 0;\n\t\t\t\tfor (var x = 0; x < result.data.targets.length; x++) {\n\t\t\t\t\tif (result.data.targets.hasOwnProperty(x)) {\n\t\t\t\t\t\tclean_res.data.targets[i] = [];\n\t\t\t\t\t\tfor (var k = 0; k < result.data.targets[x].length; k++) {\n\t\t\t\t\t\t\tif (result.data.targets[x].hasOwnProperty(k)) {\n\t\t\t\t\t\t\t\tclean_res.data.targets[i].push(result.data.targets[x][k]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn(This.dataQueryMapper(clean_res, options));\n\t\t\t});\n\t\t} else { return(This.dataQueryMapper(metrics, options)); }\n\t});\n\t\n\t/* return this.backendSrv.datasourceRequest(requestOptions)\n                          .then(function(result) {\n\t\t\t\t\t\t\treturn(This.dataQueryMapper(result, options))\n                          }); */\n\t\n  }\n\n  /* maps the result data from pnp into grafana data format */\n  dataQueryMapper(result, options) {\n    var data = {data:[]};\n    if(!result || !result.data || !result.data.targets) {\n        return(data);\n    }\n    for(var x=0; x < result.data.targets.length; x++) {\n      for(var k=0; k < result.data.targets[x].length; k++) {\n        var target = options.targets[x];\n        var res    = result.data.targets[x][k];\n        var alias = target.label;\n        if(target.alias) {\n          alias = target.alias;\n          var scopedVars = {\n            tag_host      : {value: res.host},\n            tag_service   : {value: res.service},\n            tag_perflabel : {value: res.perflabel},\n            tag_label     : {value: res.perflabel}\n          };\n          alias = this.templateSrv.replace(alias, scopedVars);\n        }\n        var datapoints = res.datapoints;\n        var length     = datapoints.length;\n        // remove the last few \"null\" values from the series because the last value is quite often null\n        // and would break current value in legend tables\n        for(var y=1; y < 5; y++) {\n          if(length > y && datapoints[length-y][0] === null) {\n            datapoints.pop();\n          } else {\n            break;\n          }\n        }\n        var length = datapoints.length;\n        var fill   = options.targets[x].fill;\n        if(fill != \"fill\") {\n          if(fill == \"zero\") { fill = 0; }\n          if(fill == \"gap\")  { fill = undefined; }\n          for(var y=0; y<length; y++) {\n            if(datapoints[y][0] === null) {\n              datapoints[y][0] = fill;\n            }\n          }\n        }\n        if(options.targets[x].factor && options.targets[x].factor != \"\") {\n          var factor = eval(options.targets[x].factor);\n          if(factor != NaN && factor != 1) {\n            for(var y=0; y<length; y++) {\n              if(datapoints[y][0] !== null) {\n                datapoints[y][0] *= factor;\n              }\n            }\n          }\n        }\n        data.data.push({\n          \"target\": alias,\n          \"datapoints\": datapoints\n        });\n      }\n    }\n    return(data);\n  }\n\n  /* convert list selection into regular expression\n   * in:  /^{a,b,c}$/\n   * out: /^(a|b|c)$/\n   */\n  _fixup_regex(value) {\n    if(value == undefined || value == null) {\n      return value;\n    }\n    var matches = value.match(/^\\/?\\^?\\{(.*)\\}\\$?\\/?$/);\n    if(!matches) { return(value); }\n    var values = matches[1].split(/,/);\n    for(var x = 0; x < values.length; x++) {\n      values[x] = values[x].replace(/\\//, '\\\\/');\n    }\n    return('/^('+values.join('|')+')$/');\n  }\n  \n  /* convert special characters to pnp filename syntax\n   * in:  /^disk /$/\n   * out: /^disk__$/\n   */\n  _name2pnp(value, delimiter) {\n\t  if(value == undefined || value == null) {\n\t\t  return value;\n\t  }\n\t  if (delimiter !== false) delimiter = true;\n\t  var matches = value.match(/^\\/.*\\/$/);\n\t  if(!matches) { return(value); }\n\t  var res;\n\t  res = value.replace(/^\\//, '');\n\t  res = res.replace(/\\/$/, '');\n\t  res = res.replace(/(\\/|\\s|&|\\\\|:)/g, '_');\n\t  if (delimiter) {\n\t\treturn('/'+res+'/');\n\t  } else {\n\t\treturn(res);\n\t  }\n  }\n\n  testDatasource() {\n    var requestOptions = this._requestOptions({\n      url: this.url + '/index.php/api',\n      method: 'GET'\n    });\n    return this.backendSrv.datasourceRequest(requestOptions)\n      .then(response => {\n        if (response.status === 200) {\n          return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n        }\n      });\n  }\n\n  /* called from the dashboard templating engine to fill template variables\n   * parses simple statements into proper data requests\n   * query syntax: <type> [where <expr>]\n   * ex.: host\n   * ex.: service where host = localhost\n   * ex.: label where host = localhost and service = ping\n   */\n  metricFindQuery(query_string) {\n    var This = this;\n    var type;\n    var options = {};\n    var query = query_string.split(/\\s+/);\n    if(query[0]) {\n      type = query.shift().replace(/s$/, \"\");\n    }\n    // parse simple where statements\n    if(query[0] != undefined) {\n      if(query[0].toLowerCase() != \"where\") {\n        throw new Error(\"query syntax error, expecting WHERE\");\n      }\n      query.shift();\n\n      while(query.length >= 3) {\n        var t   = query.shift().toLowerCase();\n        var op  = query.shift().toLowerCase();\n        var val = query.shift();\n        if(op != \"=\") {\n          throw new Error(\"query syntax error, operator must be '='\");\n        }\n        options[t] = val;\n\n        if(query[0] != undefined) {\n          if(query[0].toLowerCase() == 'and') {\n            query.shift();\n          } else {\n            throw new Error(\"query syntax error, expecting AND\");\n          }\n        }\n      }\n\n      // still remaining filters?\n      if(query.length > 0) {\n        throw new Error(\"query syntax error\");\n      }\n    }\n    return(This.metricFindData(type, options, false));\n  }\n\n  /* used from the query editor to get lists of objects of given type */\n  metricFindData(type, options, prependVariables) {\n    var This = this;\n    var mapper;\n    var url;\n    var data = {};\n    if(type == \"host\") {\n      url          = This.url + '/index.php/api/hosts';\n      mapper       = This.mapToTextValueHost;\n    }\n    else if(type == \"service\") {\n      url          = This.url + '/index.php/api/services/';\n      data.host    = This._fixup_regex(This.templateSrv.replace(options.host));\n      mapper       = This.mapToTextValueService;\n      if(!data.host) { data.host = '/.*/'; }\n    }\n    else if(type == \"perflabel\" || type == \"label\") {\n      url          = This.url + '/index.php/api/labels/';\n      data.host    = This._fixup_regex(This.templateSrv.replace(options.host));\n      data.service = This._fixup_regex(This.templateSrv.replace(options.service));\n      mapper       = This.mapToTextValuePerflabel;\n      if(!data.host)    { data.host    = '/.*/'; }\n      if(!data.service) { data.service = '/.*/'; }\n    }\n\n    if(url == undefined) {\n      throw new Error(\"query syntax error, got no url, unknown type: \"+type);\n    }\n\n    var requestOptions = This._requestOptions({\n      url:     url,\n      data:    data,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return This.backendSrv.datasourceRequest(requestOptions)\n      .then(mapper)\n      .then(function(data) {\n        /* prepend templating variables */\n        if(prependVariables) {\n          for(var x=0; x<This.templateSrv.variables.length; x++) {\n            data.unshift({ text:  '/^$'+This.templateSrv.variables[x].name+'$/',\n                           value: '/^$'+This.templateSrv.variables[x].name+'$/' });\n          }\n        }\n        return(data);\n      });\n  }\n\n  mapToTextValueHost(result) {\n    return _.map(result.data.hosts, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  mapToTextValueService(result) {\n    return _.map(result.data.services, (d, i) => {\n      return { text: (d.servicedesc || d.name), value: d.name };\n    });\n  }\n\n  mapToTextValuePerflabel(result) {\n    return _.map(result.data.labels, (d, i) => {\n      return { text: (d.label || d.name), value: (d.label || d.name) };\n    });\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.host !== this.DEFAULT_HOST;\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.service !== this.DEFAULT_SERVICE;\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.perflabel !== this.DEFAULT_PERFLABEL;\n    });\n    var targets = _.map(options.targets, target => {\n      return {\n        host: this.templateSrv.replace(this.templateSrv.replace(target.host, options.scopedVars)),\n        service: this.templateSrv.replace(this.templateSrv.replace(target.service, options.scopedVars)),\n        perflabel: this.templateSrv.replace(this.templateSrv.replace(target.perflabel, options.scopedVars)),\n        alias: this.templateSrv.replace(this.templateSrv.replace(target.alias, options.scopedVars)),\n        type: this.templateSrv.replace(this.templateSrv.replace(target.type, options.scopedVars)),\n        fill: this.templateSrv.replace(this.templateSrv.replace(target.fill, options.scopedVars)),\n        factor: this.templateSrv.replace(this.templateSrv.replace(target.factor, options.scopedVars)),\n        refId: target.refId,\n        hide: target.hide\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n\n  _requestOptions(options) {\n    options = options || {};\n    options.headers = options.headers || {};\n    if(this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if(this.basicAuth) {\n      options.headers.Authorization = this.basicAuth;\n    }\n    return(options);\n  }\n}\n"]}